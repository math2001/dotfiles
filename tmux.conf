set-option -g repeat-time 0
set-option -g default-terminal "tmux-256color"
set-option -g prefix C-s

set-option -g escape-time 0
set-option -g renumber-windows on

set-option -g mouse on

# move panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# open splits in the current directory
bind v split-window -h -c "#{pane_current_path}"
bind x split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

unbind %
unbind '"'

# reorder tmux tabs
# n goes to the next, shift-n moves to the next
bind P swap-window -t -1
bind N swap-window -t +1

# set a cooler status line
set-option -g status-position top
if-shell 'test "$TERMINAL_THEME" = "light"' \
     'set-option -g status-style bg=colour15'  \
     'set-option -g status-style bg=colour0'
set-option -g status-left ''

if-shell 'test "$TERMINAL_THEME" = "light"' \
    'set-option -g window-status-current-style bg=colour7' \
    'set-option -g window-status-current-style bg=colour5'
set-option -g window-status-format ' #T '
set-option -g window-status-current-format ' #T '

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# I don't know why there thing doesn't work. I made my own that I like:
# Any where, I just press prefix + hjkl and it always works
bind-key h if-shell "$is_vim" "send-keys c-h" "select-pane -L"
bind-key l if-shell "$is_vim" "send-keys c-l" "select-pane -R"
bind-key k if-shell "$is_vim" "send-keys c-k" "select-pane -U"
bind-key j if-shell "$is_vim" "send-keys c-j" "select-pane -D"

set-option -wg mode-keys vi

# https://unix.stackexchange.com/a/131187/219235
# to copy, ctrl+b [, select, and then press y
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
